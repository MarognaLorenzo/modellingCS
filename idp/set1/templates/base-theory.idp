// DO NOT EDIT the line below
include "base-vocabulary.idp"


vocabulary V_base_extended {
    extern vocabulary V_base

    // TODO (warmup)
    // Declare a new constructed type "Prop".
    // This type is constructed by all 4 property types of cards.
    // Use the same names for constructors as the names of the types (i.e., Number, Shape, ...).
    // TEMPLATE: type Prop constructed from { <Fill here> }
	
    
    // TODO (warmup)
    // Declare a new function "cardsProp".
    // For a given Card and (Prop)erty it returns a Value.
    
}


theory T_base : V_base_extended {
    
    // TODO (warmup)
    // Defined cardsProp function projecting values per parameter.
    // It is important do define this function correctly!
    // Use a definition! 
    // HINT: You can quantify over cards in two ways (in this example P is a predicate over Cards):
    // 	1) ! c[Card] : P(c). 
    //	2) ! n[Number] s[Shape] d[Shade] c[Color] : P(c(n, s, d, c)). 
    //	The second way is possible because Card is a constructed type (see Base voc line 20)!
    {
        
    }
}
